; A temporary variable $0 is used to store the welcome message
PUT &Welcome to the mlmcr math demo!, $0
PUSH $0
; $0 gets overwritten here
PULL $0, Insert the first number: 
PULL $1, Insert the second number: 
; STR to INT conversion
INT $0
INT $1
; Math stuff
ADD $0, $1, $2
SUB $0, $1, $3
MUL $0, $1, $4
DIV $0, $1, $5
FDIV $0, $1, $6
MOD $0, $1, $7
POW $0, $1, $8
; The = sign is put in a variable
PUT &=, $9
; $0 and $1 are copied to $A and $B respectively to increment and decrement them
; This way the original variables are preserved
PUT $0, $A
PUT $1, $B
INC $A
DEC $B
; Math signs get stored in variables $C to $14
PUT &+, $C
PUT &-, $D
PUT &*, $E
PUT &/, $F
PUT &//, $10
PUT &%, $11
PUT &**, $12
PUT &+ 1, $13
PUT &- 1, $14
; The math operation results are displayed
PUSH $0, $C, $1, $9, $2
PUSH $0, $D, $1, $9, $3
PUSH $0, $E, $1, $9, $4
PUSH $0, $F, $1, $9, $5
PUSH $0, $10, $1, $9, $6
PUSH $0, $11, $1, $9, $7
PUSH $0, $12, $1, $9, $8
PUSH $0, $13, $9, $A
PUSH $1, $14, $9, $B
; The exit message is displayed; now the user can press 'return' to exit
PUT &The math demo has finished. Enjoy using mlmcr!, $15
PUSH $15
; The lines below equal to an input()-exit() call in Python
PULL $16
EXIT