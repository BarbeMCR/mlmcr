name >>_default

pyblock
def mlif(args):  # IF condition, call, [args..., return]  (condition:BOOL, call:SUBR|FUNC|PROC, args...:*, return:->{*})
    def _mlif(args):
        if len(args) == 2:
            run_if(args[0], args[1])
        else:
            r = run_if(args[0], args[1], args[2:-1])
            this().set_var(args[-1], r)
    atleast(_mlif, args, 2)

def mlelif(args):  # ELIF condition, call, [args..., return]  (condition:BOOL, call:SUBR|FUNC|PROC, args...:*, return:->{*})
    def _mlelif(args):
        if len(args) == 2:
            run_elif(args[0], args[1])
        else:
            r = run_elif(args[0], args[1], args[2:-1])
            this().set_var(args[-1], r)
    atleast(_mlelif, args, 2)

def mlelse(args):  # ELSE call, [args..., return]  (call:SUBR|FUNC|PROC, args...:*, return:->{*})
    def _mlelse(args):
        if len(args) == 1:
            run_else(args[0])
        else:
            r = run_else(args[0], args[1:-1])
            this().set_var(args[-1], r)
    atleast(_mlelse, args, 1)

bind(mlif, 'IF')
bind(mlelif, 'ELIF')
bind(mlelse, 'ELSE')
pyend
